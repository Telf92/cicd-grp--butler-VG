pipeline {
    agent any
    stages {

        stage('Run Black') {
            steps {
                sh 'black backend/'
            }
        }

        stage('Run Pylint') {
            steps{
                sh 'pylint --fail-under=7 --recursive true --ignore=venv backend'
            }
        }
        
        stage('Build Docker Image'){
            steps{
                script {
                    // Build your Docker image
                    docker.build('ping-url')
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script{

                    def container = docker.image('ping-url').inside('-p 5000:5000'){
                        sh 'echo "Hello"'
                        //container.inside {
                        sh 'pytest ./backend/tests/test_api_request.py'
                        //}
                    }
                
                    /*try {
                        sh 'echo "Hello"'
                        container.inside {
                            sh 'pytest ./backend/tests/test_api_request.py'
                        }
                    } finally {
                        // Clean up the container
                        container.stop()
                    }*/
                }
            }


        }

        /*stage('Run API tests') {
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'pytest backend/tests/test_api_request.py'
                }
            }
        }*/

    }
    post {
        success {
            // Actions to take if the pipeline is successful
            echo 'Build successful!'
        }
        failure {
            // Actions to take if the pipeline fails
            echo 'Build failed!'
        }
    }
}
