pipeline {
    agent any
    stages {

        stage('Run Black') {
            steps {
                sh 'black backend/'
            }
        }

        stage('Run Pylint') {
            steps{
                sh 'pylint --fail-under=7 --recursive true --ignore=venv backend'
            }
        }
        
        stage('Build Docker Image'){
            steps{
                script {
                    // Build your Docker image
                    docker.build('ping-url')
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script{
                    def container = docker.image('ping-url').run('-p 5000:5000 --network=host')
                
                    try {
                        // Run stages inside the Docker container
                        stage('Installing Pip requirements') {
                            container.inside {
                                sh '/usr/local/bin/python -m pip install --upgrade pip'
                                sh 'pip install -r backend/requirements.txt'
                            }
                        }

                        stage('Run API tests') {
                            container.inside {
                                sh 'pytest ./jenkins/tests/test_api_request.py'
                            }
                        }

                        } finally {
                            // Clean up the container
                            container.stop()
                        }
                
                }
            }


        }
        /*
        stage('Installing Pip requirements'){
        
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh '/usr/local/bin/python -m pip install --upgrade pip'
                    sh 'pip install -r backend/requirements.txt'
                }
            }
        
        }

        stage('Run API tests') {
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'pytest ./jenkins/tests/test_api_request.py'
                }
            }
        }*/

    }
    post {
        success {
            // Actions to take if the pipeline is successful
            echo 'Build successful!'
        }
        failure {
            // Actions to take if the pipeline fails
            echo 'Build failed!'
        }
    }
}
